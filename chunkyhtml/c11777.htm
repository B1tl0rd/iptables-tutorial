<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<HTML
><HEAD
><TITLE
>Example scripts</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.79"><LINK
REL="HOME"
TITLE="Iptables Tutorial 1.2.2"
HREF="book1.htm"><LINK
REL="PREVIOUS"
TITLE="What's next?"
HREF="x11772.htm"><LINK
REL="NEXT"
TITLE="rc.firewall.txt"
HREF="x12074.htm"><LINK
REL="STYLESHEET"
TYPE="text/css"
HREF="table.css"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>Iptables Tutorial 1.2.2</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="x11772.htm"
ACCESSKEY="P"
>Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
></TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="x12074.htm"
ACCESSKEY="N"
>Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="EXAMPLESCRIPTS"
></A
>Chapter 14. Example scripts</H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>Table of Contents</B
></DT
><DT
><A
HREF="c11777.htm#RCFIREWALLTXTSCRIPTSTRUCTURE"
>rc.firewall.txt script
structure</A
></DT
><DT
><A
HREF="x12074.htm"
>rc.firewall.txt</A
></DT
><DT
><A
HREF="x12114.htm"
>rc.DMZ.firewall.txt</A
></DT
><DT
><A
HREF="x12188.htm"
>rc.DHCP.firewall.txt</A
></DT
><DT
><A
HREF="x12280.htm"
>rc.UTIN.firewall.txt</A
></DT
><DT
><A
HREF="x12321.htm"
>rc.test-iptables.txt</A
></DT
><DT
><A
HREF="x12339.htm"
>rc.flush-iptables.txt</A
></DT
><DT
><A
HREF="x12368.htm"
>Limit-match.txt</A
></DT
><DT
><A
HREF="x12380.htm"
>Pid-owner.txt</A
></DT
><DT
><A
HREF="x12395.htm"
>Recent-match.txt</A
></DT
><DT
><A
HREF="x12409.htm"
>Sid-owner.txt</A
></DT
><DT
><A
HREF="x12424.htm"
>Ttl-inc.txt</A
></DT
><DT
><A
HREF="x12435.htm"
>Iptables-save ruleset</A
></DT
><DT
><A
HREF="x12445.htm"
>What's next?</A
></DT
></DL
></DIV
><P
>The objective of this chapter is to give a fairly brief and short explanation 
of each script available with this tutorial, and to provide an overview of the
scripts and what services they provide. These scripts are not in any way
perfect, and they may not fit your exact intentions perfectly. It is, in other
words, up to you to make these scripts suitable for your needs. The rest of this
tutorial should most probably be helpful in making this feat. The first section
of this tutorial deals with the actual structure that I have established in each
script so we may find our way within the script a bit easier.
  </P
><DIV
CLASS="SECTION"
><H1
CLASS="SECTION"
><A
NAME="RCFIREWALLTXTSCRIPTSTRUCTURE"
>rc.firewall.txt script
structure</A
></H1
><P
>All scripts written for this tutorial have been written after a specific
structure. The reason for this is that they should be fairly similar to
each other and to make it easier to find the differences between the scripts.
This structure should be fairly well documented in this brief chapter. This
chapter should hopefully give a short understanding to why all the scripts have
been written as they have, and why I have chosen to maintain this structure.
   </P
><DIV
CLASS="NOTE"
><P
></P
><TABLE
CLASS="NOTE"
WIDTH="100%"
BORDER="0"
><TR
><TD
WIDTH="25"
ALIGN="CENTER"
VALIGN="TOP"
><IMG
SRC="images/note.gif"
HSPACE="5"
ALT="Note"></TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><P
>Even though this is the structure I have chosen, do note that this may not be
the best structure for your scripts. It is only a structure that I have chosen
to use since it fits the need of being easy to read and follow the best
according to my logic.
    </P
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="SECTION"
><H2
CLASS="SECTION"
><A
NAME="THESTRUCTURE"
>The structure</A
></H2
><P
>This is the structure that all scripts in this tutorial should follow. If they
differ in some way it is probably an error on my part, unless it is specifically
explained why I have broken this structure.
    </P
><P
></P
><OL
TYPE="1"
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Configuration</I
></SPAN
> - First of
all we have the configuration options which the rest of the script should use.
Configuration options should pretty much always be the first thing in any
shell-script.
      </P
><P
></P
><OL
TYPE="1"
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Internet</I
></SPAN
> - This is the
configuration section which pertains to the Internet connection. This could be
skipped if we do not have any Internet connection. Note that there may be more
subsections than those listed here, but only such that pertain to our Internet
connection.
        </P
><P
></P
><OL
TYPE="1"
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>DHCP</I
></SPAN
> - If there are
possibly any special DHCP requirements with this
specific script, we will add the DHCP specific
configuration options here.
          </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>PPPoE</I
></SPAN
> - If there is a
possibility that the user that wants to use this specific script, and if there
are any special circumstances that raises the chances that he is using a
PPPoE connection, we will add specific options for
those here.
          </P
></LI
></OL
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>LAN</I
></SPAN
> - If there is any
LAN available behind the firewall, we will add
options pertaining to that in this section. This is most likely, hence this
section will almost always be available.
        </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>DMZ</I
></SPAN
> - If there is any
reason to it, we will add a DMZ zone configuration at
this point. Most scripts lacks this section, mainly because any normal home
network, or small corporate network, will not have one.
        </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Localhost</I
></SPAN
> - These options
pertain to our localhost. These variables are highly
unlikely to change, but we have put most of it into variables anyway.
Hopefully, there should be no reason to change these variables.
        </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>iptables</I
></SPAN
> - This section
contains iptables specific configuration. In most
scripts and situations this should only require one variable which tells us
where the iptables binary is located.

        </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Other</I
></SPAN
> - If there are any other specific
options and variables, they should first of all be fitted into the correct
subsection (If it pertains to the Internet connection, it should be
sub-sectioned there, etc). If it does not fit in anywhere, it should be
sub-sectioned directly to the configuration options somewhere.
        </P
></LI
></OL
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Module loading</I
></SPAN
> - This
section of the scripts should maintain a list of modules. The first part
should contain the required modules, while the second part should contain the
non-required modules.
      </P
><DIV
CLASS="NOTE"
><P
></P
><TABLE
CLASS="NOTE"
WIDTH="90%"
BORDER="0"
><TR
><TD
WIDTH="25"
ALIGN="CENTER"
VALIGN="TOP"
><IMG
SRC="images/note.gif"
HSPACE="5"
ALT="Note"></TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><P
>Note that some modules that may raise security, or add certain services or
possibilities, may have been added even though they are not required. This
should normally be noted in such cases within the example scripts.
       </P
></TD
></TR
></TABLE
></DIV
><DIV
CLASS="NOTE"
><P
></P
><TABLE
CLASS="NOTE"
WIDTH="90%"
BORDER="0"
><TR
><TD
WIDTH="25"
ALIGN="CENTER"
VALIGN="TOP"
><IMG
SRC="images/note.gif"
HSPACE="5"
ALT="Note"></TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><P
>As of the later iptables versions, modules are automatically loaded and most
module loading should not be required, but from a control perspective, it is
better to load the modules on your own. For example, the conntrack helpers are
never automatically loaded.
	</P
></TD
></TR
></TABLE
></DIV
><P
></P
><OL
TYPE="1"
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Required modules</I
></SPAN
> - This
section should contain the required modules, and possibly special modules that
add to the security or add special services to the administrator or clients.
        </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Non-required modules</I
></SPAN
> -
This section contains modules that are not required for normal operations. All
of these modules should be commented out per default, and if you want to add
the service it provides, it is up to you.
        </P
></LI
></OL
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>proc configuration</I
></SPAN
> - This
section should take care of any special configuration needed in the proc file
system. If some of these options are required, they will be listed as such, if
not, they should be commented out per default, and listed under the
non-required proc configurations. Most of the useful proc configurations will
be listed here, but far from all of them.
       </P
><P
></P
><OL
TYPE="1"
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Required proc configuration</I
></SPAN
> - This section should contain all of the
required proc configurations for the script in question to work. It could
possibly also contain configurations that raise security, and possibly which
add special services or possibilities for the administrator or clients.
        </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Non-required proc
configuration</I
></SPAN
> - This section should contain
non-required proc configurations that may prove useful. All of them should be
commented out, since they are not actually necessary to get the script to
work. This list will contain far from all of the proc configurations or
nodes.
        </P
></LI
></OL
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Rules set up</I
></SPAN
> -  By now the
scripts should most probably be ready to insert the
rule-set. I have chosen to split all the rules down
after table and then chain names in the rule-sets, to make them easier to
follow and read. All user specified chains are created before we do anything
to the system built in chains. I have also chosen to set the chains and their
rule specifications in the same order as they are output by the
iptables -L command.
      </P
><P
></P
><OL
TYPE="1"
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Filter table</I
></SPAN
>
 - First of all we go
through the filter table and its content. First of all we should set up all
the policies in the table.
        </P
><P
></P
><OL
TYPE="1"
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Set policies</I
></SPAN
> - Set up all
the default policies for the system chains. Normally I will set
DROP policies on the chainsa in the
filter table, and specifically
ACCEPT services and streams that I want to allow inside.
This way we will get rid of all ports that we do not want to let people use.
          </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Create user specified chains</I
></SPAN
> - At
this point we create all the user specified chains that we want to use later
on within this table. We will not be able to use these chains in the system
chains anyway if they are not already created so we might as well get to it as
soon as possible.
          </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Create content in user specified chains</I
></SPAN
>
 - After creating the user specified chains we
may as well enter all the rules within these chains. The only reason I have to
enter this data at this point already is that you may as well put it close to
the creation of the user specified chains. You may as well put this later on
in your script, it is totally up to you.
          </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>INPUT
chain</I
></SPAN
> - When we have come this far, we do not have a lot of things left
to do within the filter table so we get onto the
INPUT chain. At this point we should add all rules
within the INPUT chain.
          </P
><DIV
CLASS="NOTE"
><P
></P
><TABLE
CLASS="NOTE"
WIDTH="90%"
BORDER="0"
><TR
><TD
WIDTH="25"
ALIGN="CENTER"
VALIGN="TOP"
><IMG
SRC="images/note.gif"
HSPACE="5"
ALT="Note"></TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><P
>At this point we start following the output from the iptables
-L command as you may see. There is no reason for you to stay with
this structure, however, do try to avoid mixing up data from different tables
and chains since it will become much harder to read such rule-sets and to fix
possible problems.
           </P
></TD
></TR
></TABLE
></DIV
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>FORWARD
chain</I
></SPAN
> - At this point we go on to add the
rules within the FORWARD chain. Nothing special about
this decision.
          </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>OUTPUT
chain</I
></SPAN
> - Last of all in the filter table,
we add the rules dealing with the OUTPUT chain. There
should, hopefully, not be too much to do at this point.
          </P
></LI
></OL
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>nat table</I
></SPAN
> - After the filter table we take care
of the nat table. This is done after the filter table because of a number of
reasons within these scripts. First of all we do not want to turn the whole
forwarding mechanism and NAT function on at too early a stage, which could
possibly lead to packets getting through the firewall at just the wrong
time point (i.e., when the NAT has been turned on, but none of the filter
rules has been run). Also, I look upon the nat table as a sort of layer that
lies just outside the filter table and kind of surrounds it. The filter table
would hence be the core, while the nat table acts as a layer lying around the
filter table, and finally the mangle table lies around the nat table as a
second layer. This may be wrong in some perspectives, but not too far from
reality.
        </P
><P
></P
><OL
TYPE="1"
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Set policies</I
></SPAN
> - First of all we set up all the
default policies within the nat table. Normally, I will be satisfied with the
default policy set from the beginning, namely the ACCEPT policy. This table
should not be used for filtering anyways, and we should not let packets be
dropped here since there are some really nasty things that may happen in such
cases due to our own presumptions. I let these chains be set to ACCEPT since
there is no reason not to do so.

          </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Create user specified chains</I
></SPAN
> - At this point
we create any user specified chains that we want within the nat table. Normally
I do not have any of these, but I have added this section anyways, just in case.
Note that the user specified chains must be created before they can actually be
used within the system chains.
          </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Create content in user specified chains</I
></SPAN
> - By
now it should be time to add all the rules to the user specified chains in the
nat table. The same thing goes here as for the user specified chains in the
filter table. We add this material here since I do not see any reason not to.
          </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>PREROUTING chain</I
></SPAN
> - The
PREROUTING chain is
used to do DNAT on packets in case we have a need for
it. In most scripts this feature is not used, or at the very least commented
out. The reason being that we do not want to open up big holes to our local
network without knowing about it. Within some scripts we have this turned on
by default since the sole purpose of those scripts is to provide such
services.
          </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>POSTROUTING chain</I
></SPAN
> - The
POSTROUTING chain should be fairly well used by the
scripts I have written since most of them depend upon the fact that you have
one or more local networks that we want to firewall against the Internet.
Mainly we will try to use the SNAT target, but in
certain cases we are forced to use the MASQUERADE
target instead.
          </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>OUTPUT chain</I
></SPAN
>
 - The
OUTPUT chain is barely used at all in any of the
scripts. As it looks now, it is not broken, but I have been unable to find any
good reasons to use this chain so far. If anyone has a reason to use this
chain, send me a line and I will add it to the tutorial.
          </P
></LI
></OL
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>mangle table</I
></SPAN
>
 - The last table to do anything
about is the mangle table. Normally I will not use
this table at all, since it should normally not be used for anyone, unless
they have specific needs, such as masking all boxes to use the exact same
TTL or to change TOS fields
etc. I have in other words chosen to leave these parts of the scripts more or
less blank, with a few exceptions where I have added a few examples of what it
may be used for.
        </P
><P
></P
><OL
TYPE="1"
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Set policies</I
></SPAN
> - Set the default policies within
the chain. The same thing goes here as for the nat table, pretty much. The table
was not made for filtering, and hence you should avoid it alltogether. I have
not set any policies in any of the scripts in the mangle table one way or the
other, and you are encouraged not to do so either.
          </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Create user specified chains</I
></SPAN
> - Create all the
user specified chains. Since I have barely used the mangle table at all in the
scripts, I have neither created any chains here since it is fairly unusable
without any data to use within it. However, this section was added just in case
someone, or I, would have the need for it in the future.
          </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>Create content in user specified chains</I
></SPAN
> - If
you have any user specified chains within this table, you may at this point add
the rules that you want within them here.
          </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>PREROUTING</I
></SPAN
> - At this point there is barely
any information in any of the scripts in this tutorial that contains any rules
here. Basically, the PREROUTING chain can be used to
set netfilter, routing and SEC marks, both on a per packet basis and on a per
connection basis. 
          </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>INPUT chain</I
></SPAN
> - The INPUT
chain is barely used in the current scripts of the tutorial, but it could be
used for mark handling for example. 
	  </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>FORWARD chain</I
></SPAN
> - The
FORWARD chain of the mangle table can be used for
mark handling and for mangling packet headers of packets that are traveling
across the firewall in question. Changing TTL and
TOS for example. 
	  </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>OUTPUT chain</I
></SPAN
> - The
OUTPUT chain could be used to mangle the packets
leaving the firewall or host itself, for example setting different marks or
setting TTL or TOS values.
This is not done in most of the scripts here, but the section has been added
however.
          </P
></LI
><LI
><P
><SPAN
CLASS="emphasis"
><I
CLASS="EMPHASIS"
>POSTROUTING chain</I
></SPAN
> - This chain is basically not
in use by any of the scripts in the tutorial as of writing this, but it could
be used to setting values for all packets leaving both the host or firewall
itself, and traffic traversing the machine. For example, it could be used to
reset the MTU of packets, set
TTL or TOS et cetera.

          </P
></LI
></OL
></LI
></OL
></LI
></OL
><P
>Hopefully this should explain more in detail how each script is structured and
why they are structured in such a way.
    </P
><DIV
CLASS="CAUTION"
><P
></P
><TABLE
CLASS="CAUTION"
WIDTH="100%"
BORDER="0"
><TR
><TD
WIDTH="25"
ALIGN="CENTER"
VALIGN="TOP"
><IMG
SRC="images/caution.gif"
HSPACE="5"
ALT="Caution"></TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
><P
>Do note that these descriptions are extremely brief, and should mainly just be
seen as a brief explanation to what and why the scripts have been split down
as they have. There is nothing that says that this is the only and best way to
go.
     </P
></TD
></TR
></TABLE
></DIV
></DIV
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="x11772.htm"
ACCESSKEY="P"
>Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="book1.htm"
ACCESSKEY="H"
>Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="x12074.htm"
ACCESSKEY="N"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>What's next?</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>rc.firewall.txt</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>
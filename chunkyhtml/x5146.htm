<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<HTML
><HEAD
><TITLE
>Tables</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.79"><LINK
REL="HOME"
TITLE="Iptables Tutorial 1.2.2"
HREF="book1.htm"><LINK
REL="UP"
TITLE="How a rule is built"
HREF="c5106.htm"><LINK
REL="PREVIOUS"
TITLE="How a rule is built"
HREF="c5106.htm"><LINK
REL="NEXT"
TITLE="Commands"
HREF="x5245.htm"><LINK
REL="STYLESHEET"
TYPE="text/css"
HREF="table.css"></HEAD
><BODY
CLASS="SECTION"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>Iptables Tutorial 1.2.2</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="c5106.htm"
ACCESSKEY="P"
>Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>Chapter 9. How a rule is built</TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="x5245.htm"
ACCESSKEY="N"
>Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="SECTION"
><H1
CLASS="SECTION"
><A
NAME="TABLES"
>Tables</A
></H1
><P
>The -t option specifies which table to use. Per default,
the filter table is used. We may specify one of the
following tables with the -t option. Do note that this is
an extremely brief summary of some of the contents of the <A
HREF="c3742.htm"
><I
>Traversing of tables and chains</I
></A
>
chapter.
   </P
><DIV
CLASS="TABLE"
><A
NAME="TABLE.TABLES"
></A
><P
><B
>Table 9-1. Tables</B
></P
><TABLE
BORDER="1"
FRAME="border"
RULES="all"
CLASS="CALSTABLE"
><COL
WIDTH="48"><COL
WIDTH="1*"><THEAD
><TR
><TH
>Table</TH
><TH
>Explanation</TH
></TR
></THEAD
><TBODY
><TR
><TD
>nat</TD
><TD
><P
>The nat table is used mainly for Network
Address Translation. "NAT"ed packets
get their  IP  addresses  altered, according to our rules. Packets  in a
stream only traverse this table once. We assume that the first  packet  of  a
stream is allowed. The rest of the packets in the same  stream are
automatically "NAT"ed or Masqueraded etc, and will be
subject  to the same actions as the first packet. These will, in other words,
not  go  through  this  table again, but will nevertheless be treated  like
the first packet in the stream. This is the main reason why  you  should  not
do  any  filtering in this table, which we will discuss at greater length
further on. The PREROUTING chain is used to alter
packets as soon as they get in to the firewall. The
OUTPUT chain is used for altering locally generated
packets (i.e., on the firewall) before they get to the routing decision.
Finally  we have the POSTROUTING chain which is used
to alter packets just as they are about to leave the firewall.</P
></TD
></TR
><TR
><TD
>mangle</TD
><TD
><P
>This table is used mainly for mangling packets. Among other things, we can
change the contents of different packets and that of their headers. Examples
of this would be to change the TTL, TOS
or MARK. Note that the MARK is not
really a change to the packet, but a mark value for the packet is set in
kernel space. Other rules or programs might use this mark further along in the
firewall to filter or do advanced routing on; tc is one example. The table
consists of five built in chains, the PREROUTING,
POSTROUTING, OUTPUT,
INPUT and FORWARD chains.
PREROUTING is used for altering packets just as they
enter the firewall and before they hit the routing decision.
POSTROUTING is used to mangle packets just after all
routing decisions have been made. OUTPUT is used for
altering locally generated packets after they enter the routing decision.
INPUT is used to alter packets after they have been
routed to the local computer itself, but before the user space application
actually sees the data. FORWARD is used to mangle
packets after they have hit the first routing decision, but before they
actually hit the last routing decision. Note that mangle can't be used for any
kind of Network Address Translation or
Masquerading, the nat table was made for these kinds
of operations.
	 </P
></TD
></TR
><TR
><TD
>filter</TD
><TD
><P
>The filter table should be used exclusively for
filtering packets. For example, we could DROP,
LOG, ACCEPT or REJECT
packets without problems, as we can in the other tables. There are three
chains built in to this table. The first one is named
FORWARD and is used on all non-locally generated
packets that are not destined for our local host (the firewall, in other
words). INPUT is used on all packets that are
destined for our local host (the firewall) and OUTPUT
is finally used for all locally generated packets.
	 </P
></TD
></TR
><TR
><TD
>raw</TD
><TD
><P
>The raw table and its chains are used before any
other tables in netfilter. It was introduced to use the
NOTRACK target. This table is rather new and is only
available, if compiled, with late 2.6 kernels and later. The raw table
contains two chains. The PREROUTING and
OUTPUT chain, where they will handle packets before
they hit any of the other netfilter subsystems. The
PREROUTING chain can be used for all incoming packets
to this machine, or that are forwarded, while the
OUTPUT chain can be used to alter the locally
generated packets before they hit any of the other netfilter subsystems. 
	 </P
></TD
></TR
></TBODY
></TABLE
></DIV
><P
>The above details should have explained the basics about the three
different tables that are available. They should be used for totally different
purposes, and you should know what to use each chain for. If you do not
understand their usage, you may well dig a pit for yourself in your firewall,
into which you will fall as soon as someone finds it and pushes you into it.
We have already discussed the requisite tables and chains in more detail
within the <A
HREF="c3742.htm"
><I
>Traversing of tables and chains</I
></A
> chapter. If you do not understand
this fully, I advise you to go back and read through it again.
   </P
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="c5106.htm"
ACCESSKEY="P"
>Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="book1.htm"
ACCESSKEY="H"
>Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="x5245.htm"
ACCESSKEY="N"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>How a rule is built</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="c5106.htm"
ACCESSKEY="U"
>Up</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Commands</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>